basePath: /
definitions:
  models.CaptionData:
    properties:
      caption:
        type: string
    type: object
  models.ErrorMessage:
    properties:
      error:
        type: string
    type: object
  models.SessionResponse:
    properties:
      session:
        type: string
    type: object
  models.SuccessMessage:
    properties:
      message:
        type: string
    type: object
  models.User:
    properties:
      caption:
        type: string
      id:
        type: integer
      lastname:
        type: string
      name:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
host: 0.0.0.0:8000
info:
  contact: {}
  description: Веб сервер для нашего клона инсты
  title: insta REST API
  version: 0.0.1
paths:
  /session:
    get:
      consumes:
      - application/json
      parameters:
      - description: Имя пользователя
        in: query
        name: username
        required: true
        type: string
      - description: Пароль
        in: query
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SessionResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorMessage'
      summary: Получить id Сессии по имени пользователя и паролю
      tags:
      - sessions
  /users/:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
      summary: Получить всех пользователей
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Создает нового пользователя с предоставленными данными
      parameters:
      - description: Объект пользователя
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorMessage'
      summary: Создать нового пользователя
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Удаляет пользователя по его ID
      parameters:
      - description: ID пользователя
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorMessage'
      summary: Удалить пользователя по ID
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Получить пользователя по его ID
      parameters:
      - description: ID пользователя
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorMessage'
      summary: Получить пользователя по ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Обновляет данные существующего пользователя по его ID
      parameters:
      - description: ID пользователя
        in: path
        name: id
        required: true
        type: string
      - description: Обновленный объект пользователя
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorMessage'
      summary: Обновить данные пользователя
      tags:
      - users
  /users/caption/{id}:
    post:
      consumes:
      - application/json
      description: Этот эндпоинт позволяет добавлять или обновлять описание пользователя.
      parameters:
      - description: ID пользователя
        in: path
        name: id
        required: true
        type: string
      - description: Данные для обновления подписи
        in: body
        name: models.captionData
        required: true
        schema:
          $ref: '#/definitions/models.CaptionData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessMessage'
        "400":
          description: Invalid JSON data
          schema:
            $ref: '#/definitions/models.ErrorMessage'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/models.ErrorMessage'
        "500":
          description: Failed to update user
          schema:
            $ref: '#/definitions/models.ErrorMessage'
      summary: Добавляет или обновляет описание пользователя.
      tags:
      - users
  /users/login:
    get:
      consumes:
      - application/json
      parameters:
      - description: id сессии
        in: query
        name: session
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorMessage'
      summary: Получить пользователя по id сессии
      tags:
      - users
swagger: "2.0"
